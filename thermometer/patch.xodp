{
  "description": "Combines low level nodes to create a simple to use thermometer. Outputs temperature in °C (can be converted to °F using celsius-to-fahrenheit node). To conserve energy the MCP9808 is put into sleep mode between temperature readings. You can maximize sampling rate by not switching off MCP9808 between reads (see example-max-sample-rate).",
  "links": [
    {
      "id": "B1pKs-o_L",
      "input": {
        "nodeId": "ryfYo-sOI",
        "pinKey": "__in__"
      },
      "output": {
        "nodeId": "ryto9-jdL",
        "pinKey": "rkMr8JcuL"
      }
    },
    {
      "id": "BkFvzzid8",
      "input": {
        "nodeId": "ryto9-jdL",
        "pinKey": "Skl3E1cu8"
      },
      "output": {
        "nodeId": "SyDVzMou8",
        "pinKey": "__out__"
      }
    },
    {
      "id": "BkRGo-o_U",
      "input": {
        "nodeId": "H1MT9WiuI",
        "pinKey": "rya0orquI"
      },
      "output": {
        "nodeId": "S1H6c-o_I",
        "pinKey": "S1mJBL-odU"
      }
    },
    {
      "id": "H1zus-j_U",
      "input": {
        "nodeId": "BkyPiWsO8",
        "pinKey": "__in__"
      },
      "output": {
        "nodeId": "H1MT9WiuI",
        "pinKey": "BkCZhrcOI"
      }
    },
    {
      "id": "HJtGjWsO8",
      "input": {
        "nodeId": "r1mhcZi_U",
        "pinKey": "S1noarcdI"
      },
      "output": {
        "nodeId": "BkGgoWjuL",
        "pinKey": "__out__"
      }
    },
    {
      "id": "Hk1cGMs_8",
      "input": {
        "nodeId": "S1H6c-o_I",
        "pinKey": "SJxkrUbsOI"
      },
      "output": {
        "nodeId": "ryto9-jdL",
        "pinKey": "rkMr8JcuL"
      }
    },
    {
      "id": "SJeAsZs_8",
      "input": {
        "nodeId": "rJq3oZs_L",
        "pinKey": "__in__"
      },
      "output": {
        "nodeId": "S1H6c-o_I",
        "pinKey": "rJaH8bou8"
      }
    },
    {
      "id": "SkFoo-jO8",
      "input": {
        "nodeId": "H1MT9WiuI",
        "pinKey": "H1renr5OI"
      },
      "output": {
        "nodeId": "SkHjobo_U",
        "pinKey": "__out__"
      }
    },
    {
      "id": "Sy3fiWjuL",
      "input": {
        "nodeId": "S1H6c-o_I",
        "pinKey": "HkWJHIbo_8"
      },
      "output": {
        "nodeId": "r1mhcZi_U",
        "pinKey": "SynATSqd8"
      }
    },
    {
      "id": "ryS2qWsOI",
      "input": {
        "nodeId": "r1mhcZi_U",
        "pinKey": "rJe3ipBc_I"
      },
      "output": {
        "nodeId": "ryto9-jdL",
        "pinKey": "rkMr8JcuL"
      }
    },
    {
      "id": "rydwMzsOL",
      "input": {
        "nodeId": "ryto9-jdL",
        "pinKey": "SJtiQyqOU"
      },
      "output": {
        "nodeId": "S1aQGGjOI",
        "pinKey": "__out__"
      }
    }
  ],
  "nodes": [
    {
      "description": "Update. Trigger read of temperature.",
      "id": "BkGgoWjuL",
      "label": "UPD",
      "position": {
        "units": "slots",
        "x": 4,
        "y": 0
      },
      "type": "xod/patch-nodes/input-pulse"
    },
    {
      "description": "Pulse on read of temperature.",
      "id": "BkyPiWsO8",
      "label": "DONE",
      "position": {
        "units": "slots",
        "x": 4,
        "y": 5
      },
      "type": "xod/patch-nodes/output-pulse"
    },
    {
      "id": "H1MT9WiuI",
      "position": {
        "units": "slots",
        "x": 4,
        "y": 4
      },
      "type": "@/shutdown"
    },
    {
      "id": "S1H6c-o_I",
      "position": {
        "units": "slots",
        "x": 2,
        "y": 3
      },
      "type": "@/read-temperature"
    },
    {
      "boundLiterals": {
        "__out__": "18h"
      },
      "description": "I²C address of the mcp9808 device. Default is 18h. The I²C address of the device can be changed using the address select pins (see https://learn.adafruit.com/adafruit-mcp9808-precision-i2c-temperature-sensor-guide/arduino-code).",
      "id": "S1aQGGjOI",
      "label": "ADDRESS",
      "position": {
        "units": "slots",
        "x": 2,
        "y": 0
      },
      "type": "xod/patch-nodes/input-byte"
    },
    {
      "id": "SkHjobo_U",
      "label": "DEV",
      "position": {
        "units": "slots",
        "x": 3,
        "y": 4
      },
      "type": "xod/patch-nodes/from-bus"
    },
    {
      "boundLiterals": {
        "__out__": "03h"
      },
      "description": "Set resolution of measurements. Four modes are available (resolution and sample time in parentheses): 00h ( 0.5°C , 30 ms); 01h (0.25°C, 65 ms); 02h (0.125°C, 130 ms); 03h (0.0625°C,  250 ms).",
      "id": "SyDVzMou8",
      "label": "RESOLUTION",
      "position": {
        "units": "slots",
        "x": 3,
        "y": 0
      },
      "type": "xod/patch-nodes/input-byte"
    },
    {
      "id": "r1mhcZi_U",
      "position": {
        "units": "slots",
        "x": 3,
        "y": 2
      },
      "type": "@/wake"
    },
    {
      "description": "Temperature in degrees Celsius.",
      "id": "rJq3oZs_L",
      "label": "TempC",
      "position": {
        "units": "slots",
        "x": 2,
        "y": 5
      },
      "type": "xod/patch-nodes/output-number"
    },
    {
      "id": "ryfYo-sOI",
      "label": "DEV",
      "position": {
        "units": "slots",
        "x": 1,
        "y": 2
      },
      "type": "xod/patch-nodes/to-bus"
    },
    {
      "id": "ryto9-jdL",
      "position": {
        "units": "slots",
        "x": 2,
        "y": 1
      },
      "type": "@/mcp9808-device"
    }
  ]
}
